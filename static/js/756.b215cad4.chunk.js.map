{"version":3,"file":"static/js/756.b215cad4.chunk.js","mappings":"6OAIaA,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAErBC,EAAAA,EAAAA,IAAU,sCAADC,OACaP,EAAO,YAC7C,CACEQ,OAAQ,CACNC,QARM,sCAWT,OACmB,OARhBR,EAAGE,EAAAO,KAQHR,EAAOD,EAAIC,KAAIC,EAAAQ,OAAA,SACdT,GAAI,OAAAC,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEXU,QAAQC,IAAIX,EAAAS,GAAMG,SAAS,yBAAAZ,EAAAa,OAAA,GAAAjB,EAAA,kBAE9B,gBAf0BkB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,K,oCCFdC,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yHASpBC,EAAWH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4KASpBG,EAAUL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,0IASpBK,EAAWP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0EAMnBO,EAAgBT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+D,2BCsBrC,EA5Ca,WACX,IAAQvB,GAAYgC,EAAAA,EAAAA,MAAZhC,QACRiC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAkB1B,OAjBAG,EAAAA,EAAAA,YAAU,WACRD,GAAW,GACX/C,EAAeK,GACZ4C,MAAK,SAAA1C,GACJoC,EAAQpC,EAAKmC,KACf,IACCQ,SAAQ,WACPH,GAAW,EACb,GACJ,GAAG,CAAC1C,KAEJ2C,EAAAA,EAAAA,YAAU,YACHF,GAAWJ,EAAKS,OAAS,IAC5BC,EAAAA,EAAAA,IAEJ,GAAG,CAACN,EAASJ,KAGXW,EAAAA,EAAAA,KAAC5B,EAAQ,CAAC6B,UAAU,OAAMC,SACtBT,GAeAO,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IAdPd,EAAKe,KAAI,SAAAC,GACP,OACEC,EAAAA,EAAAA,MAAC9B,EAAQ,CAAA0B,SAAA,EACPF,EAAAA,EAAAA,KAACtB,EAAO,CACN6B,IAAG,kCAAAhD,OAAoC8C,EAAGG,cAC1CC,IAAKJ,EAAGK,KACRC,MAAM,SAERX,EAAAA,EAAAA,KAACpB,EAAQ,CAAAsB,SAAEG,EAAGK,QACdJ,EAAAA,EAAAA,MAACxB,EAAa,CAAAoB,SAAA,CAAC,cAAYG,EAAGO,eAPjBP,EAAGQ,GAUtB,KAMR,C,sDCvDO,IAAMd,EAAW,WACtB,IAAMe,EAAcC,SAASC,cAAc,SACrCC,EAAiBF,SAASC,cAAc,YAC9C,GAAIF,EACFA,EAAYI,eAAe,CAAEC,SAAU,SAAUC,MAAO,cACnD,KAAIH,EAGP,OAFFA,EAAeC,eAAe,CAAEC,SAAU,SAAUC,MAAO,SAG7D,CACF,C","sources":["api/getMovieCredit.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/scroll.js"],"sourcesContent":["import axios from 'axios';\n\nconst APi_KEY = '9f234b00a323f5ab16274541e59c6da6';\n\nexport const getMovieCredit = async movieId => {\n  try {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      {\n        params: {\n          api_key: APi_KEY,\n        },\n      }\n      )\n    const data = res.data;\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 28px;\n  list-style: none;\n  padding: 0;\n  margin: 24px 0 0 0;\n`;\n\nexport const CastItem = styled.li`\n  width: 160px;\n  background: #f4f6fa;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(25, 118, 210, 0.07);\n  padding: 16px 10px;\n  text-align: center;\n`;\n\nexport const CastImg = styled.img`\n  width: 100px;\n  height: 140px;\n  object-fit: cover;\n  border-radius: 8px;\n  background: #e3f2fd;\n  margin-bottom: 10px;\n`;\n\nexport const CastName = styled.p`\n  font-weight: 500;\n  margin: 8px 0 4px 0;\n  color: #1976d2;\n`;\n\nexport const CastCharacter = styled.p`\n  font-size: 0.98rem;\n  color: #444;\n  margin: 0;\n`;","import { getMovieCredit } from 'api/getMovieCredit';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  CastCharacter,\n  CastImg,\n  CastItem,\n  CastList,\n  CastName,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { onScroll } from 'utils/scroll';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    getMovieCredit(movieId)\n      .then(data => {\n        setCast(data.cast);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!loading && cast.length > 0) {\n      onScroll();\n    }\n  }, [loading, cast]);\n\n  return (\n    <CastList className=\"Cast\">\n      {!loading ? (\n        cast.map(el => {\n          return (\n            <CastItem key={el.id}>\n              <CastImg\n                src={`https://image.tmdb.org/t/p/w500${el.profile_path}`}\n                alt={el.name}\n                width=\"100\"\n              />\n              <CastName>{el.name}</CastName>\n              <CastCharacter>Character: {el.character}</CastCharacter>\n            </CastItem>\n          );\n        })\n      ) : (\n        <Loader />\n      )}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","export const onScroll = () => {\n  const castElement = document.querySelector('.Cast');\n  const reviewsElement = document.querySelector('.Reviews');\n  if (castElement) {\n    castElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  } else if (reviewsElement) {\n    reviewsElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  } else {\n      return;\n  }\n};\n"],"names":["getMovieCredit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","res","data","_context","prev","next","axios","concat","params","api_key","sent","abrupt","t0","console","log","message","stop","_x","apply","arguments","CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","CastImg","_templateObject3","CastName","_templateObject4","CastCharacter","_templateObject5","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","then","finally","length","onScroll","_jsx","className","children","Loader","map","el","_jsxs","src","profile_path","alt","name","width","character","id","castElement","document","querySelector","reviewsElement","scrollIntoView","behavior","block"],"sourceRoot":""}