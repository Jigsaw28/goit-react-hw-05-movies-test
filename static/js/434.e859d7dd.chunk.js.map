{"version":3,"file":"static/js/434.e859d7dd.chunk.js","mappings":"6OAIaA,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEtBC,EAAAA,EAAAA,IAAU,sCAADC,OACaP,EAAO,YAC7C,CACEQ,OAAQ,CACNC,QARM,sCAWR,KAAD,EAPM,OAAHR,EAAGE,EAAAO,KAAAP,EAAAE,KAAA,EAQYJ,EAAIC,KAAKS,QAAQ,KAAD,EAAzB,OAAJT,EAAIC,EAAAO,KAAAP,EAAAS,OAAA,SACHV,GAAI,QAAAC,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAGbW,QAAQC,IAAIZ,EAAAU,GAAMG,SAAS,yBAAAb,EAAAc,OAAA,GAAAlB,EAAA,mBAE9B,gBAhB2BmB,GAAA,OAAAtB,EAAAuB,MAAA,KAAAC,UAAA,K,oCCFfC,EAAcC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMvBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4JAQtBG,EAASL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2EAMlBK,EAAUP,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4DAMlBO,EAAYT,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sE,2BC8BjC,EA7CgB,WACd,IAAQxB,GAAYiC,EAAAA,EAAAA,MAAZjC,QACRkC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAoB1B,OAlBAG,EAAAA,EAAAA,YAAU,WACRjD,EAAgBK,GACb6C,MAAK,SAAA3C,GACJqC,EAAWrC,EACb,IACC4C,SAAQ,WACPH,GAAW,EACb,GACJ,GAAG,CAAC3C,KAEJ4C,EAAAA,EAAAA,YAAU,YACHF,GAAWJ,EAAQS,QAAU,IAChCC,EAAAA,EAAAA,IAIJ,GAAG,CAACN,EAASJ,KAGXW,EAAAA,EAAAA,KAAC5B,EAAW,CAAC6B,UAAU,UAASC,SAC5BT,GAcAO,EAAAA,EAAAA,KAACG,EAAAA,EAAM,IAbPd,EAAQS,OACNT,EAAQe,KAAI,SAAAC,GACV,OACEC,EAAAA,EAAAA,MAAC9B,EAAU,CAAA0B,SAAA,EACTF,EAAAA,EAAAA,KAACtB,EAAM,CAAAwB,SAAEG,EAAOE,UAChBP,EAAAA,EAAAA,KAACpB,EAAO,CAAAsB,SAAEG,EAAOG,YAFFH,EAAOI,GAK5B,KAEAT,EAAAA,EAAAA,KAAClB,EAAS,CAAAoB,SAAC,gDAOrB,C,sDCxDO,IAAMH,EAAW,WACtB,IAAMW,EAAcC,SAASC,cAAc,SACrCC,EAAiBF,SAASC,cAAc,YAC9C,GAAIF,EACFA,EAAYI,eAAe,CAAEC,SAAU,SAAUC,MAAO,cACnD,KAAIH,EAGP,OAFFA,EAAeC,eAAe,CAAEC,SAAU,SAAUC,MAAO,SAG7D,CACF,C","sources":["api/getMovieReviews.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","utils/scroll.js"],"sourcesContent":["import axios from 'axios';\n\nconst APi_KEY = '9f234b00a323f5ab16274541e59c6da6';\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const res = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n      {\n        params: {\n          api_key: APi_KEY,\n        },\n      }\n      );\n      const data = await res.data.results;\n      return data;\n   \n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 28px 0 0 0;\n`;\n\nexport const ReviewItem = styled.li`\n  background: #f4f6fa;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(25, 118, 210, 0.07);\n  padding: 18px 20px;\n  margin-bottom: 18px;\n`;\n\nexport const Author = styled.h3`\n  margin: 0 0 10px 0;\n  color: #1976d2;\n  font-size: 1.08rem;\n`;\n\nexport const Content = styled.p`\n  margin: 0;\n  color: #222;\n  font-size: 1rem;\n`;\n\nexport const NoReviews = styled.p`\n  color: #888;\n  font-style: italic;\n  margin-top: 18px;\n`;","import { getMovieReviews } from 'api/getMovieReviews';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Author,\n  Content,\n  NoReviews,\n  ReviewItem,\n  ReviewsList,\n} from './Reviews.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { onScroll } from 'utils/scroll';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        setReviews(data);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  useEffect(() => {\n    if (!loading && reviews.length >= 0) {\n      onScroll();\n    } else {\n      return;\n    }\n  }, [loading, reviews]);\n\n  return (\n    <ReviewsList className=\"Reviews\">\n      {!loading ? (\n        reviews.length ? (\n          reviews.map(review => {\n            return (\n              <ReviewItem key={review.id}>\n                <Author>{review.author}</Author>\n                <Content>{review.content}</Content>\n              </ReviewItem>\n            );\n          })\n        ) : (\n          <NoReviews>We dont't have any reviews for this movie.</NoReviews>\n        )\n      ) : (\n        <Loader />\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","export const onScroll = () => {\n  const castElement = document.querySelector('.Cast');\n  const reviewsElement = document.querySelector('.Reviews');\n  if (castElement) {\n    castElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  } else if (reviewsElement) {\n    reviewsElement.scrollIntoView({ behavior: 'smooth', block: 'start' });\n  } else {\n      return;\n  }\n};\n"],"names":["getMovieReviews","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","res","data","_context","prev","next","axios","concat","params","api_key","sent","results","abrupt","t0","console","log","message","stop","_x","apply","arguments","ReviewsList","styled","_templateObject","_taggedTemplateLiteral","ReviewItem","_templateObject2","Author","_templateObject3","Content","_templateObject4","NoReviews","_templateObject5","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","useEffect","then","finally","length","onScroll","_jsx","className","children","Loader","map","review","_jsxs","author","content","id","castElement","document","querySelector","reviewsElement","scrollIntoView","behavior","block"],"sourceRoot":""}