{"version":3,"file":"static/js/58.e86bc382.chunk.js","mappings":"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","sources":["api/FetchMovieDetails.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '9f234b00a323f5ab16274541e59c6da6';\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}`,\n      {\n        params: {\n          api_key: API_KEY,\n        },\n      }\n    );\n    const movieDetails = await response.data;\n    return movieDetails;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  max-width: 900px;\n  margin: 40px auto;\n  padding: 32px;\n  background: #fff;\n  border-radius: 18px;\n  box-shadow: 0 2px 16px rgba(25, 118, 210, 0.07);\n`;\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  margin-bottom: 24px;\n  color: #1976d2;\n  text-decoration: none;\n  font-weight: 500;\n  background: #e3f2fd;\n  padding: 7px 18px;\n  border-radius: 6px;\n  transition: background 0.2s, color 0.2s;\n  &:hover {\n    background: #bbdefb;\n    color: #1565c0;\n  }\n`;\n\nexport const DetailsSection = styled.div`\n  display: flex;\n  gap: 32px;\n  margin-bottom: 32px;\n  @media (max-width: 700px) {\n    flex-direction: column;\n    align-items: center;\n    gap: 18px;\n  }\n`;\n\nexport const Poster = styled.img`\n  width: 260px;\n  border-radius: 10px;\n  box-shadow: 0 2px 8px rgba(25, 118, 210, 0.08);\n  background: #f4f6fa;\n`;\n\nexport const Info = styled.div`\n  flex: 1;\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0;\n  margin-bottom: 14px;\n  font-size: 2rem;\n  color: #222;\n`;\n\nexport const Score = styled.p`\n  font-weight: 500;\n  color: #1976d2;\n  margin-bottom: 10px;\n`;\n\nexport const Overview = styled.p`\n  margin-bottom: 14px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const Genre = styled.li`\n  background: #e3f2fd;\n  color: #1976d2;\n  padding: 4px 12px;\n  border-radius: 6px;\n  font-size: 0.98rem;\n`;\n\nexport const AdditionalSection = styled.div`\n  margin-top: 24px;\n`;\n\nexport const AdditionalTitle = styled.h2`\n  font-size: 1.2rem;\n  margin-bottom: 12px;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  gap: 18px;\n  list-style: none;\n  padding: 0;\n  margin: 0 0 18px 0;\n`;\n\nexport const AdditionalLink = styled(Link)`\n  color: #1976d2;\n  text-decoration: none;\n  font-weight: 500;\n  padding: 5px 14px;\n  border-radius: 6px;\n  background: #e3f2fd;\n  transition: background 0.2s, color 0.2s;\n  &:hover {\n    background: #bbdefb;\n    color: #1565c0;\n  }\n`;","import { fetchMovieDetails } from 'api/FetchMovieDetails';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  BackLink,\n  DetailsSection,\n  Poster,\n  Wrapper,\n  Title,\n  Info,\n  Score,\n  Overview,\n  GenresList,\n  Genre,\n  AdditionalSection,\n  AdditionalTitle,\n  AdditionalList,\n  AdditionalLink,\n} from './MovieDetails.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movie, setMovie] = useState('');\n  const [loading, setLoading] = useState(false);\n  const backLinkLocationRefs = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setLoading(true);\n    fetchMovieDetails(movieId)\n      .then(data => {\n        setMovie(data);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      <Wrapper>\n        {loading ? (\n          <Loader />\n        ) : (\n          <>\n            <BackLink to={backLinkLocationRefs.current}>Go back</BackLink>\n            <DetailsSection>\n              <Poster\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <Info>\n                <Title>{movie.title}</Title>\n                <Score>\n                  User score: {Math.round((movie.vote_average * 100) / 10)}%\n                </Score>\n                <Overview>Overview: {movie.overview}</Overview>\n                <div>\n                  Genres:\n                  <GenresList>\n                    {movie.genres &&\n                      movie.genres.map(genre => (\n                        <Genre key={genre.id}>{genre.name}</Genre>\n                      ))}\n                  </GenresList>\n                </div>\n              </Info>\n            </DetailsSection>\n            <AdditionalSection>\n              <AdditionalTitle>Additional information</AdditionalTitle>\n              <AdditionalList>\n                <li>\n                  <AdditionalLink to={`cast`}>Cast</AdditionalLink>\n                </li>\n                <li>\n                  <AdditionalLink to={`reviews`}>Reviews</AdditionalLink>\n                </li>\n              </AdditionalList>\n              <Suspense fallback={<Loader />}>\n                <Outlet />\n              </Suspense>\n            </AdditionalSection>\n          </>\n        )}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","movieDetails","_context","prev","next","axios","concat","params","api_key","sent","data","abrupt","t0","console","log","message","stop","_x","apply","arguments","Wrapper","styled","_templateObject","_taggedTemplateLiteral","BackLink","Link","_templateObject2","DetailsSection","_templateObject3","Poster","_templateObject4","Info","_templateObject5","Title","_templateObject6","Score","_templateObject7","Overview","_templateObject8","GenresList","_templateObject9","Genre","_templateObject10","AdditionalSection","_templateObject11","AdditionalTitle","_templateObject12","AdditionalList","_templateObject13","AdditionalLink","_templateObject14","_location$state$from","_location$state","useParams","location","useLocation","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","loading","setLoading","backLinkLocationRefs","useRef","state","from","useEffect","then","finally","_jsx","_Fragment","children","Loader","_jsxs","to","current","src","poster_path","alt","title","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback","Outlet"],"sourceRoot":""}