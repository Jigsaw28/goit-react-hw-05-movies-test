{"version":3,"file":"static/js/997.7acf4c09.chunk.js","mappings":"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","sources":["pages/Home.styled.jsx","api/getMovieBySearch.jsx","pages/Movies.styled.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Container = styled.div`\n  max-width: 800px;\n  margin: 40px auto;\n  padding: 24px;\n  background: #fff;\n  border-radius: 16px;\n  box-shadow: 0 2px 16px rgba(0,0,0,0.07);\n`;\n\nexport const Title = styled.h1`\n  font-size: 2.2rem;\n  margin-bottom: 24px;\n  color: #2d2d2d;\n  text-align: center;\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MovieItem = styled.li`\n  margin-bottom: 14px;\n  font-size: 1.1rem;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  color: #1976d2;\n  text-decoration: none;\n  font-weight: 500;\n  transition: color 0.2s;\n  &:hover {\n    color: #1565c0;\n    text-decoration: underline;\n  }\n`;","import axios from 'axios';\nconst API_KEY = '9f234b00a323f5ab16274541e59c6da6';\n\nexport const getMovieBySearch = async searchQuery => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie`,\n      {\n        params: {\n          api_key: API_KEY,\n          query: searchQuery,\n        },\n      }\n      );\n    const movies = await response.data.results;\n    return movies;\n  } catch (error) {\n    console.log(error.message);\n  }\n}","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 32px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 8px 14px;\n  font-size: 1rem;\n  border: 1px solid #bdbdbd;\n  border-radius: 6px 0 0 6px;\n  outline: none;\n  width: 260px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 8px 18px;\n  font-size: 1rem;\n  border: none;\n  background: #1976d2;\n  color: #fff;\n  border-radius: 0 6px 6px 0;\n  cursor: pointer;\n  transition: background 0.2s;\n  &:hover {\n    background: #1565c0;\n  }\n`;\n","import { getMovieBySearch } from 'api/getMovieBySearch';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Container, MovieItem, MovieLink, MovieList } from './Home.styled';\nimport { SearchButton, SearchForm, SearchInput } from './Movies.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query) {\n      setLoading(true);\n      getMovieBySearch(query).then(data => {\n        if (data.length === 0) {\n          alert('No movies found for your search query');\n        } else {\n          setMovies(data);\n        }\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const searchQuery = form.query.value.trim();\n    if (searchQuery === '') {\n      alert('Please enter a search query');\n      return setSearchParams({});\n    }\n    setSearchParams({ query: searchQuery });\n    form.reset();\n  };\n\n  return (\n    <>\n      <Container>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchInput\n            type=\"text\"\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <SearchButton type=\"submit\">Search</SearchButton>\n        </SearchForm>\n        <MovieList>\n          {!loading ? (\n            movies.map(movie => {\n              return (\n                <MovieItem key={movie.id}>\n                  <MovieLink\n                    to={`/movies/${movie.id}`}\n                    state={{ from: location }}\n                  >\n                    {movie.title || movie.name} (\n                    {new Date(\n                      movie.release_date || movie.first_air_date\n                    ).getFullYear()}\n                    )\n                  </MovieLink>\n                </MovieItem>\n              );\n            })\n          ) : (\n            <Loader />\n          )}\n        </MovieList>\n      </Container>\n    </>\n  );\n};\nexport default Movies;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","MovieList","_templateObject3","MovieItem","_templateObject4","MovieLink","Link","_templateObject5","getMovieBySearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","searchQuery","response","movies","_context","prev","next","axios","params","api_key","query","sent","data","results","abrupt","t0","console","log","message","stop","_x","apply","arguments","SearchForm","SearchInput","SearchButton","_searchParams$get","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","get","useEffect","then","length","alert","finally","_jsx","_Fragment","children","_jsxs","onSubmit","e","preventDefault","form","currentTarget","value","trim","reset","type","name","autoComplete","autoFocus","placeholder","Loader","map","movie","to","concat","id","state","from","title","Date","release_date","first_air_date","getFullYear"],"sourceRoot":""}